#!/bin/bash
set -eo pipefail

function run_commands {
	COMMANDS=$1
	while IFS= read -r cmd; do echo "$cmd" && eval "$cmd" ; done < <(printf '%s\n' "$COMMANDS")
}

function run_exit_commands {
	set +e
	set +o pipefail
	run_commands "${POST_COMMANDS_EXIT:-}"
}

function replace_spaces {
  echo "${1//\\ /\\}"
}

function replace_spaces_back {
  echo "${1//\\/ }"
}

function check_bool {
  local var="$1"

  if [ -n "$var" ]; then
    if [ "$var" = "true" ] || [ "$var" = "1" ]; then
      echo "true"
      return
    fi
  fi
  echo "false"
}

trap run_exit_commands EXIT

run_commands "${PRE_COMMANDS:-}"

IFS=" " read -r -a RESTIC_BACKUP_SOURCES <<< "$(replace_spaces "${RESTIC_BACKUP_SOURCES:-/data}")"
RESTIC_BACKUP_TAGS="${RESTIC_BACKUP_TAGS:-}"
IFS=" " read -r -a RESTIC_BACKUP_ARGS <<< "$(replace_spaces "$RESTIC_BACKUP_ARGS")"

tags="$(echo "$RESTIC_BACKUP_TAGS" | tr "," "\n")"
tag_options=()
for tag in $tags; do
  tag_options=("${tag_options[@]}" --tag "$tag")
done

backup_sources=()
for source in "${RESTIC_BACKUP_SOURCES[@]}"; do
  source="$(replace_spaces_back "$source")"
  backup_sources=("${backup_sources[@]}" "$source")
done

backup_args=()
for arg in "${RESTIC_BACKUP_ARGS[@]}"; do
  arg="$(replace_spaces_back "$arg")"
  backup_args=("${backup_args[@]}" "$arg")
done

start=$(date +%s)
echo Starting Backup at $(date +"%Y-%m-%d %H:%M:%S")

set +e
restic --repo="${RESTIC_REPOSITORY}" backup "${backup_args[@]}" "${tag_options[@]}" "${backup_sources[@]}"
rc=$?
set -e

result="success"
if [ $rc -ne 0 ]; then
  if [ $rc -eq 3 ]; then
    if [ "$(check_bool "${SUCCESS_ON_INCOMPLETE_BACKUP:-}")" = "true" ]; then
      result="success"
    else
      result="incomplete"
    fi
  else
    result="failure"
  fi
fi

case "$result" in
success)
  echo Backup successful;;
incomplete)
  echo Backup incomplete;;
failure)
  echo Backup failed;;
esac

if [ -n "${RESTIC_FORGET_ARGS}" ]; then
  IFS=" " read -r -a RESTIC_FORGET_ARGS <<< "$RESTIC_FORGET_ARGS"
  echo Forget about old snapshots based on RESTIC_FORGET_ARGS = "${RESTIC_FORGET_ARGS[@]}"
  restic forget "${tag_options[@]}" "${RESTIC_FORGET_ARGS[@]}"
fi

end=$(date +%s)
echo Finished backup at $(date +"%Y-%m-%d %H:%M:%S") after $((end-start)) seconds

case "$result" in
success)
  run_commands "${POST_COMMANDS_SUCCESS:-}";;
incomplete)
  if [ -n "${POST_COMMANDS_INCOMPLETE:-}" ]; then
    run_commands "${POST_COMMANDS_INCOMPLETE:-}"
  else
    run_commands "${POST_COMMANDS_FAILURE:-}"
  fi;;
failure)
  run_commands "${POST_COMMANDS_FAILURE:-}";;
esac

exit $rc
